services:
  reverse-proxy:
    image: traefik:latest
    restart: always
    command:
      - '--providers.docker'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.web.http.redirections.entryPoint.to=websecure'
      - '--entrypoints.web.http.redirections.entrypoint.scheme=https'
      - '--entrypoints.websecure.address=:443'
      - '--certificatesresolvers.mytlschallenge.acme.tlschallenge=true'
      - '--certificatesresolvers.mytlschallenge.acme.email=<ALTERAR_PARA_EMAIL_COMERCIAL>'
      - '--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json'
    ports:
      - 80:80
      - 443:443
    networks:
      - local
    depends_on:
      - web
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock

  web:
    container_name: app
    build:
      context: ../
      dockerfile: docker/prod.Dockerfile
    env_file: ../.env
    restart: always
    ports:
      - '8080:8080'
    networks:
      - local
    labels:
      - traefik.enable=true
      - traefik.http.routers.app.rule=Host(`<ALTERAR_PARA_DOMINIO>`)
      - traefik.http.routers.app.tls=true
      - traefik.http.routers.app.entrypoints=web,websecure
      - traefik.http.routers.app.tls.certresolver=mytlschallenge
      - traefik.http.middlewares.app.headers.SSLRedirect=true
      - traefik.http.middlewares.app.headers.STSSeconds=315360000
      - traefik.http.middlewares.app.headers.browserXSSFilter=true
      - traefik.http.middlewares.app.headers.contentTypeNosniff=true
      - traefik.http.middlewares.app.headers.forceSTSHeader=true
      - traefik.http.middlewares.app.headers.SSLHost=flly.com.br
      - traefik.http.middlewares.app.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.app.headers.STSPreload=true
      - traefik.http.middlewares.app.compress=true

  redis:
    container_name: redis
    image: 'redis:alpine'
    ports:
      - '6379:6379'
    networks:
      - local
    command: redis-server --appendonly yes --replica-read-only no

networks:
  local:

volumes:
  letsencrypt:
